import logging

import discord
from discord.ext import commands

from instruments import messages, database_process
from settings import settings

module_logger = logging.getLogger('my_bot')


class Events(commands.Cog):

    def __init__(self, bot):
        self.bot = bot
        self.is_bot_ready = False

    @commands.Cog.listener()
    async def on_member_join(self, member):
        if member.guild.id == settings.MAIN_GUILD_ID:
            module_logger.info(f'–ù–æ–≤–æ–µ —Ç–µ–ª–æ –ø–æ—è–≤–∏–ª–æ—Å—å –Ω–∞ –ª–æ–¥–∫–µ {member}')
            await member.send(messages.hello_new_member)

    @commands.Cog.listener()
    async def on_ready(self):
        if not self.is_bot_ready:
            module_logger.info('–ë–æ—Ç –Ω–∞—á–∞–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É')
            self.is_bot_ready = True
        else:
            critical_msg = (f"–ë–æ—Ç –±—ã–ª —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω. –°–º–∞–π–ª–∏–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ —Å–±–æ—Ä–µ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç\n"
                            f"–¢–∞–∫ —á—Ç–æ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Å–±–æ—Ä–µ —á–µ—Ä–µ–∑ !!—Å–±–æ—Ä")
            module_logger.critical(critical_msg)
        custom_status = '–ü–æ–∫–æ—Ä—è–µ–º –º–∏—Ä –∏ –ª—é–¥–∏—à–µ–∫'
        await self.bot.change_presence(status=discord.Status.online, activity=discord.Game(custom_status))

    @commands.Cog.listener()
    async def on_command_error(self, ctx, error):
        base_log = f"{ctx.author} –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤—ë–ª –∫–æ–º–∞–Ω–¥—É {ctx.message.content}. "
        if isinstance(error, commands.errors.BadArgument):
            log = base_log + str(error)
            await ctx.message.add_reaction('‚ùî')
        elif isinstance(error, commands.errors.CheckFailure):
            log = base_log + "–ù–µ—Ç –ø—Ä–∞–≤"
            await ctx.message.add_reaction('‚õî')
        elif isinstance(error, commands.errors.MissingRequiredArgument):
            log = base_log + "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã"
            await ctx.message.add_reaction('‚ùî')
        elif isinstance(error, commands.errors.CommandNotFound):
            log = base_log + "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
            await ctx.message.add_reaction('‚ùì')
        elif isinstance(error, commands.errors.PrivateMessageOnly):
            log = base_log + "–ö–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–≤–∞—Ç–Ω–∞—è"
            await ctx.message.author.send('–í–≤–µ–¥—ë–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É')
            await ctx.message.add_reaction('‚ùì')
        elif isinstance(error, commands.errors.NoPrivateMessage):
            log = base_log + "–ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–π"
            await ctx.message.author.send('–í–≤–µ–¥—ë–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∞ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É')
            await ctx.message.add_reaction('‚ùì')
        elif isinstance(error, commands.errors.BotMissingPermissions):
            log = base_log + "–ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É. –ù–µ—Ç—É –ø—Ä–∞–≤."
            await ctx.message.author.send(f'–£ –±–æ—Ç–∞ –Ω–µ—Ç—É –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø—Ä–∞–≤, –µ–º—É –Ω—É–∂–Ω—ã {error.missing_perms}')
            await ctx.message.add_reaction('‚ùì')
        elif isinstance(error, commands.errors.UserInputError):
            log = base_log + f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã. {error}"
            await ctx.message.add_reaction('‚ùì')
        else:
            log = base_log + "????"
            log += f'\n{error}'
        module_logger.info(log)

    async def add_role_from_reaction(self, payload:discord.RawReactionActionEvent):
        if (
                payload.guild_id != settings.MAIN_GUILD_ID or
                payload.message_id != settings.ROLE_MANAGER_MESSAGE_ID or
                str(payload.emoji) not in settings.ROLE_EMOJI
        ):
            return
        guild = self.bot.get_guild(payload.guild_id)
        role = discord.utils.get(guild.roles, name=settings.ROLE_EMOJI[str(payload.emoji)])
        if str(payload.emoji) == 'üîë':
            await payload.member.send(
                '__**–°–¢–†–û–ì–û –î–õ–Ø –¢–ï–•, –ö–û–ú–£ 18+!**__\n'
                '–ï—Å–ª–∏ **—Ç–µ–±–µ –º–µ–Ω—å—à–µ 18 –ª–µ—Ç**, —Ç–æ –ø—Ä–æ—à—É —Å–Ω–æ–≤–∞ –Ω–∞–∂–∞—Ç—å –Ω–∞ —Å–º–∞–π–ª–∏–∫ :key: –≤ #welcome, —á—Ç–æ–±—ã '
                '—É–±—Ä–∞—Ç—å –Ω–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –≤–∞–º –∫–æ–Ω—Ç–µ–Ω—Ç.\n'
                '–í—ã –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ **NSFW** —Ä–∞–∑–¥–µ–ª—É. **NSFW** - **N**ot **S**uitable **F**or **W**umpus. '
                '–í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ **`–∫–ª—É–±–Ω–∏—á–∫–∞`**\n'
                '__**–ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏ –±—É–¥–µ—Ç –Ω–∞–∫–∞–∑—ã–≤–∞—Ç—å—Å—è:**__\n'
                ' - –∫–æ–Ω—Ç–µ–Ω—Ç —Å –Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–º–∏,\n'
                ' - –ª–æ–ª–∏–∫–æ–Ω, —Å—ë—Ç–∞–∫–æ–Ω.\n'
            )
        await payload.member.add_roles(role)

    async def remove_role_from_reaction(self, payload: discord.RawReactionActionEvent):
        if (
                payload.guild_id != settings.MAIN_GUILD_ID or
                payload.message_id != settings.ROLE_MANAGER_MESSAGE_ID or
                str(payload.emoji) not in settings.ROLE_EMOJI
        ):
            return
        guild = self.bot.get_guild(payload.guild_id)
        member = guild.get_member(payload.user_id)
        role = discord.utils.get(guild.roles, name=settings.ROLE_EMOJI[str(payload.emoji)])
        await member.remove_roles(role)

    @commands.Cog.listener()
    async def on_raw_reaction_add(self, payload: discord.RawReactionActionEvent):
        # Check if is reaction for get role
        await self.add_role_from_reaction(payload)
        # Check if is reaction for get in raid
        joining = self.bot.get_cog('RaidJoining')
        channel = self.bot.get_channel(payload.channel_id)
        message = await channel.fetch_message(payload.message_id)
        user = self.bot.get_user(payload.user_id)
        await joining.raid_reaction_add(message, payload.emoji, user)

    @commands.Cog.listener()
    async def on_raw_reaction_remove(self, payload: discord.RawReactionActionEvent):
        # Check if is reaction for get role
        await self.remove_role_from_reaction(payload)
        # Check if is reaction for get in raid
        joining = self.bot.get_cog('RaidJoining')
        channel = self.bot.get_channel(payload.channel_id)
        message = await channel.fetch_message(payload.message_id)
        user = self.bot.get_user(payload.user_id)
        await joining.raid_reaction_remove(message, payload.emoji, user)


def setup(bot):
    bot.add_cog(Events(bot))
    module_logger.debug('–£—Å–ø–µ—à–Ω—ã–π –∑–∞–ø—É—Å–∫ bot.events')
